#define _Digole_Serial_UART_ 
#include <DigoleSerial.h>
#include <Wire.h>
DigoleSerialDisp mydisp(&Serial2, 9600);

const unsigned char wel[] PROGMEM ={
3,132, // Data Length
67,76, // Clear Screen
83,70,201, // Font
69,84,80,0,50, // Text Position Abs.
83,67,128, // Color
84,84,83,116,101,108,108,97,32,68,105,32,67,97,115,97,0, // Text
83,70,200, // Font
83,67,255, // Color
69,84,80,0,29, // Text Position Abs.
84,84,85,78,73,67,0, // Text
// Start Picture
68,73,77,31,60,99,65,0,0,0,0,0,0,0,7,128,0,0,0,31,0,0,0,0,0,0,0,15,
128,0,0,0,31,0,0,0,0,0,0,0,62,128,0,0,0,31,0,0,0,0,0,0,0,126,192,0,0,
0,31,0,0,0,0,0,0,0,254,192,0,0,0,31,0,0,0,0,0,0,3,254,192,0,0,0,31,0,
0,0,0,0,0,7,254,192,0,0,0,31,0,0,0,0,0,0,15,254,192,0,0,0,31,0,0,0,0,
0,0,31,254,192,0,0,0,31,0,0,0,0,0,0,63,254,192,0,0,0,31,0,0,0,0,0,0,
255,254,192,0,0,0,31,0,0,0,0,0,1,255,254,192,0,0,0,31,0,0,0,0,0,3,255,
254,192,0,0,0,31,0,0,0,0,0,7,255,255,192,0,0,0,31,0,0,0,0,0,31,255,255,
255,255,255,255,223,0,0,0,0,0,255,255,255,255,255,255,255,223,0,0,63,255,
255,255,255,255,255,255,255,252,223,0,0,63,255,255,255,255,255,255,255,255,
224,255,0,0,63,255,255,255,255,255,255,255,255,128,127,0,0,63,255,255,255,255,
255,255,255,252,0,127,0,0,63,255,255,255,255,255,255,255,240,0,127,0,0,63,255,
255,255,255,255,255,255,128,1,255,0,0,55,255,255,255,255,255,255,252,0,15,255,
0,0,51,255,255,255,255,255,255,240,0,63,31,0,0,57,255,255,255,255,255,255,128,
1,252,31,0,0,28,255,255,255,255,255,254,0,7,224,31,0,0,14,127,255,255,255,255,
240,0,63,128,31,0,0,7,63,255,255,255,255,192,0,252,0,31,0,0,3,191,255,255,255,
254,0,7,240,0,31,0,0,1,255,255,255,255,252,0,31,128,0,31,0,0,0,255,255,255,255,
248,0,254,0,0,31,0,0,3,255,255,255,255,248,3,240,0,0,31,0,0,7,255,255,255,255,
248,31,192,0,0,31,0,0,15,255,255,255,255,248,126,0,0,0,31,0,0,31,255,255,255,
255,249,248,0,0,0,31,0,0,127,255,255,255,255,243,192,0,0,0,31,0,0,255,255,255,
255,255,247,0,0,0,0,31,0,1,255,255,255,255,255,247,0,0,0,0,31,0,3,255,255,255,
255,255,246,0,0,0,0,31,0,15,255,255,199,255,255,246,0,0,0,0,31,0,31,255,255,
3,255,255,246,0,0,0,0,31,0,63,255,248,1,255,255,238,0,0,0,0,31,0,127,255,192,
0,255,255,236,0,0,0,0,31,1,255,254,0,0,127,255,236,0,0,0,0,31,3,255,248,0,14,
127,255,236,0,0,0,0,31,7,255,192,0,127,63,255,236,0,0,0,0,31,31,254,0,1,251,
159,255,236,0,0,0,0,31,63,240,0,15,225,207,255,236,0,0,0,0,31,127,128,0,127,
0,231,255,220,0,0,0,0,31,254,0,3,248,0,115,255,216,0,0,0,0,31,240,0,31,192,
0,57,255,216,0,0,0,0,31,192,0,126,0,0,28,255,216,0,0,0,0,31,192,3,248,0,0,14,
127,216,0,0,0,0,31,192,31,192,0,0,7,63,216,0,0,0,0,31,224,254,0,0,0,3,159,184,
0,0,0,0,31,103,240,0,0,0,1,207,176,0,0,0,0,31,127,128,0,0,0,0,231,176,0,0,0,0,
31,124,0,0,0,0,0,115,176,0,0,0,0,31,0,0,0,0,0,0,56,48,0,0,0,0,31,0,0,0,0,0,0,
28,48,0,0,0,0,31,0,0,0,0,0,0,14,112,0,0,0,0,31,0,0,0,0,0,0,7,96,0,0,0,0,31,0,0,
0,0,0,0,3,224,0,0,0,0,31,0,0,0,0,0,0,3,224,0,0,0,0,31,0,0,0,0,0,0,1,224,0,0,0,0,31
};

void setup() {
  mydisp.begin();
  mydisp.clearScreen();
//  mydisp.print((uint8_t) (sizeof(wel) % 256));
//  mydisp.nextTextLine();
//  mydisp.print((uint8_t) (sizeof(wel) / 256));

  mydisp.print("uploading start screen now...(1024 bytes)");
  delay(1000);            //this delay is very important, it will let module to clear the receive buffer
  mydisp.uploadStartScreen(sizeof(wel),wel);
  delay(500);
  mydisp.clearScreen();
  mydisp.displayStartScreen(1);
  delay(10000);  
  mydisp.displayConfig(0);
  mydisp.displayStartScreen(0);
}
void loop() {

  
}

